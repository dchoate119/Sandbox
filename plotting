#Import important software 

import numpy as np
from matplotlib import pyplot as plt
import tensorflow as tf
import pykitti
from scipy.spatial.transform import Rotation as R

import vedo
from vedo import *
from ipyvtklink.viewer import ViewInteractiveWidget
import nbconvert

%autosave 90
%matplotlib notebook


#Load KITTI sample dataset
#Locate dataset through base directory 
basedir = "/home/danielchoate/Documents"
date = '2011_09_26'

# urban dataset used in 3D-ICET paper 
# drive = '0005' #life in the big city
drive = '0091' #Matt's favorite- don't use for testing though, we trained here!
idx = 0 #frame index in sequence
skip = 1

dataset = pykitti.raw(basedir, date, drive)

velo1 = dataset.get_velo(idx) # Each scan is a Nx4 array of [x,y,z,reflectance]
c1 = velo1[:,:3]
velo2 = dataset.get_velo(idx+skip) # Each scan is a Nx4 array of [x,y,z,reflectance]
c2 = velo2[:,:3]
# c1 = c1[c1[:,2] > -1.5] #ignore ground plane
# c2 = c2[c2[:,2] > -1.5] #ignore ground plane
c1 = c1[c1[:,2] > -2.] #ignore reflections
c2 = c2[c2[:,2] > -2.] #ignore reflections

poses0 = dataset.oxts[idx] #<- ID of 1st scan
poses1 = dataset.oxts[idx+1] #<- ID of 2nd scan
dt = skip*0.10 #mean time between lidar samples
OXTS_ground_truth = tf.constant([poses1.packet.vf*dt, -poses1.packet.vl*dt, poses1.packet.vu*dt, poses1.packet.wf*dt, poses1.packet.wl*dt, poses1.packet.wu*dt])